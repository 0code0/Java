/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Admin;


import BusinessLogic.*;
import BusinessObject.*;

import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;

import java.util.Date;
import java.util.HashMap;

import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;

import javax.swing.ImageIcon;
import javax.swing.JFileChooser;


import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author singhj1
 */
public class ManageStock extends javax.swing.JFrame {

    private int UpdateId=0;
    private int PrimaryKey =0;

    Building building = new Building();
    Block block = new Block();
    Parts parts = new Parts();
    People people = new People();
    Quantity quantity = new Quantity();
    Rack rack = new Rack();
    Used used  = new Used();
    Base base = new Base();
    Date date = new Date();
    
    
    List<Building> AllBuilding;
    List<Block> AllBlock;
    List<Rack> AllRack;
    List<Parts> AllParts;
    List<People> AllPeople;
    
    ImageIcon finalImage;
    File file;
    
    Map<Integer,Integer> mapGetallBuilding,mapGetallBLock,mapGetallRacks,mapGetallParts;
   
    /**
     * Creates new form ManageStock
     */
    private void GetData() {
        List<Building> list = BuildingBL.GetAll();
        DefaultTableModel tablemodel = (DefaultTableModel) jTable1.getModel();
        tablemodel.setRowCount(0);
        Object[] row = new Object[2];

        for (int i = 0; i < list.size(); i++) {

            
            row[0] = list.get(i).getId();
            row[1] = list.get(i).getName();

            tablemodel.addRow(row);

        }
    }
    
 

    public ManageStock() {
        initComponents();
        GetallBuilding();
        GetData();
        GetallBLock();
        GetallRacks();
        GetallParts();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        DeleteName = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        BuildingName = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        BuildingUpdate = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        LableName = new javax.swing.JLabel();
        BlockName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        InsertBlock = new javax.swing.JButton();
        UpdateBlock = new javax.swing.JButton();
        DeleteBlock = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        getallbuilding = new javax.swing.JComboBox<>();
        SearchBlock = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        RackInsertAllBlock2 = new javax.swing.JComboBox<>();
        RackName = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        RackInsertAllBlock = new javax.swing.JComboBox<>();
        InsertRack = new javax.swing.JButton();
        UpdateRack = new javax.swing.JButton();
        DeleteRack = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        PartName1 = new javax.swing.JLabel();
        PartName = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        getAllRacksPart = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        PartSerialNo = new javax.swing.JTextField();
        getAllRacksPart2 = new javax.swing.JComboBox<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        InsertParts = new javax.swing.JButton();
        UpdateParts = new javax.swing.JButton();
        DeleteParts = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        SelectImageLable = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        QuantityCount = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        getAllPartsQuantity = new javax.swing.JComboBox<>();
        InsertQuantity = new javax.swing.JButton();
        UpdateQuantity = new javax.swing.JButton();
        DeleteQuantity = new javax.swing.JButton();
        getAllPartsQuantity2 = new javax.swing.JComboBox<>();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        UserName = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        UserPhoneNo = new javax.swing.JTextField();
        UserAddress = new javax.swing.JTextField();
        UserLocation = new javax.swing.JTextField();
        jComboBox9 = new javax.swing.JComboBox<>();
        InsertPeople = new javax.swing.JButton();
        UpdatePeople = new javax.swing.JButton();
        DeletePeople = new javax.swing.JButton();
        jComboBox10 = new javax.swing.JComboBox<>();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable6 = new javax.swing.JTable();
        jButton6 = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        DeleteName.setText("Delete");
        DeleteName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteNameActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "Building Name"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setMinWidth(0);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(0);
            jTable1.getColumnModel().getColumn(0).setMaxWidth(0);
        }

        jLabel1.setText("Name");

        BuildingName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuildingNameActionPerformed(evt);
            }
        });

        jButton1.setText("Insert");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        BuildingUpdate.setText("Update");
        BuildingUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuildingUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(BuildingUpdate)
                        .addGap(34, 34, 34)
                        .addComponent(DeleteName))
                    .addComponent(BuildingName, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(120, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BuildingName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(BuildingUpdate)
                            .addComponent(DeleteName)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(428, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("M-Building", jPanel1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Building Name", "Block Name", "", "null"
            }
        ));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(2).setMinWidth(0);
            jTable2.getColumnModel().getColumn(2).setPreferredWidth(0);
            jTable2.getColumnModel().getColumn(2).setMaxWidth(0);
            jTable2.getColumnModel().getColumn(3).setMinWidth(0);
            jTable2.getColumnModel().getColumn(3).setPreferredWidth(0);
            jTable2.getColumnModel().getColumn(3).setMaxWidth(0);
        }

        LableName.setText("Name");

        jLabel3.setText("Select Building");

        InsertBlock.setText("Insert");
        InsertBlock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsertBlockActionPerformed(evt);
            }
        });

        UpdateBlock.setText("Update");
        UpdateBlock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateBlockActionPerformed(evt);
            }
        });

        DeleteBlock.setText("Delete");
        DeleteBlock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteBlockActionPerformed(evt);
            }
        });

        SearchBlock.setText("Search");
        SearchBlock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchBlockActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LableName)
                            .addComponent(jLabel3))
                        .addGap(63, 63, 63)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BlockName)
                            .addComponent(getallbuilding, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(InsertBlock)
                                .addGap(18, 18, 18)
                                .addComponent(UpdateBlock)
                                .addGap(18, 18, 18)
                                .addComponent(DeleteBlock))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(jLabel14)))
                        .addGap(0, 159, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(SearchBlock, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SearchBlock))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LableName)
                            .addComponent(BlockName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(getallbuilding, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(43, 43, 43)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(InsertBlock)
                            .addComponent(UpdateBlock)
                            .addComponent(DeleteBlock))
                        .addGap(74, 74, 74)
                        .addComponent(jLabel14)))
                .addContainerGap(202, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("M-Block", jPanel2);

        jLabel2.setText("Name");

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Block Name", "Rack Name", "", ""
            }
        ));
        jTable3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable3MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable3);
        if (jTable3.getColumnModel().getColumnCount() > 0) {
            jTable3.getColumnModel().getColumn(2).setMinWidth(0);
            jTable3.getColumnModel().getColumn(2).setPreferredWidth(0);
            jTable3.getColumnModel().getColumn(2).setMaxWidth(0);
            jTable3.getColumnModel().getColumn(3).setMinWidth(0);
            jTable3.getColumnModel().getColumn(3).setPreferredWidth(0);
            jTable3.getColumnModel().getColumn(3).setMaxWidth(0);
        }

        jLabel4.setText("Select Block");

        InsertRack.setText("Insert");
        InsertRack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsertRackActionPerformed(evt);
            }
        });

        UpdateRack.setText("Update");
        UpdateRack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateRackActionPerformed(evt);
            }
        });

        DeleteRack.setText("Delete");
        DeleteRack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteRackActionPerformed(evt);
            }
        });

        jButton2.setText("Search");
        jButton2.setActionCommand("");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4))
                        .addGap(38, 38, 38)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(RackName, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RackInsertAllBlock, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(InsertRack)
                        .addGap(18, 18, 18)
                        .addComponent(UpdateRack)
                        .addGap(18, 18, 18)
                        .addComponent(DeleteRack)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 106, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(RackInsertAllBlock2, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(RackInsertAllBlock2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(RackName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2))
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(RackInsertAllBlock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(InsertRack)
                            .addComponent(UpdateRack)
                            .addComponent(DeleteRack)))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(337, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("M-Rack", jPanel3);

        PartName1.setText("Name");

        jLabel6.setText("Select Rack");

        jLabel7.setText("Serial No");

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Rack Name", "Parts Name", "Serial No", "", "", ""
            }
        ));
        jTable4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable4MouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTable4);
        if (jTable4.getColumnModel().getColumnCount() > 0) {
            jTable4.getColumnModel().getColumn(3).setMinWidth(0);
            jTable4.getColumnModel().getColumn(3).setPreferredWidth(0);
            jTable4.getColumnModel().getColumn(3).setMaxWidth(0);
            jTable4.getColumnModel().getColumn(4).setMinWidth(0);
            jTable4.getColumnModel().getColumn(4).setPreferredWidth(0);
            jTable4.getColumnModel().getColumn(4).setMaxWidth(0);
            jTable4.getColumnModel().getColumn(5).setMinWidth(0);
            jTable4.getColumnModel().getColumn(5).setPreferredWidth(0);
            jTable4.getColumnModel().getColumn(5).setMaxWidth(0);
        }

        InsertParts.setText("Insert");
        InsertParts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsertPartsActionPerformed(evt);
            }
        });

        UpdateParts.setText("Update");
        UpdateParts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdatePartsActionPerformed(evt);
            }
        });

        DeleteParts.setText("Delete");
        DeleteParts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeletePartsActionPerformed(evt);
            }
        });

        jButton3.setText("Search");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        SelectImageLable.setText("Select Image");
        SelectImageLable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SelectImageLableMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(InsertParts)
                                .addGap(18, 18, 18)
                                .addComponent(UpdateParts)
                                .addGap(18, 18, 18)
                                .addComponent(DeleteParts))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(PartName1)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7))
                                .addGap(29, 29, 29)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(PartName, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
                                    .addComponent(PartSerialNo)
                                    .addComponent(getAllRacksPart, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(115, 115, 115)
                        .addComponent(SelectImageLable, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)))
                .addGap(64, 64, 64)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 470, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(getAllRacksPart2, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PartName1)
                    .addComponent(PartName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(getAllRacksPart2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(getAllRacksPart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(SelectImageLable, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(PartSerialNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(InsertParts)
                            .addComponent(UpdateParts)
                            .addComponent(DeleteParts)))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(274, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("m-Parts", jPanel4);

        jLabel5.setText("Count");

        jLabel8.setText("Select Parts");

        InsertQuantity.setText("Insert");
        InsertQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsertQuantityActionPerformed(evt);
            }
        });

        UpdateQuantity.setText("Update");
        UpdateQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateQuantityActionPerformed(evt);
            }
        });

        DeleteQuantity.setText("Delete");

        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Part Name", "Count", "", ""
            }
        ));
        jTable5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable5MouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(jTable5);
        if (jTable5.getColumnModel().getColumnCount() > 0) {
            jTable5.getColumnModel().getColumn(2).setMinWidth(0);
            jTable5.getColumnModel().getColumn(2).setPreferredWidth(0);
            jTable5.getColumnModel().getColumn(2).setMaxWidth(0);
            jTable5.getColumnModel().getColumn(3).setMinWidth(0);
            jTable5.getColumnModel().getColumn(3).setPreferredWidth(0);
            jTable5.getColumnModel().getColumn(3).setMaxWidth(0);
        }

        jButton4.setText("Search");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel8))
                        .addGap(1, 1, 1)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(QuantityCount)
                            .addComponent(getAllPartsQuantity, 0, 154, Short.MAX_VALUE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(InsertQuantity)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(UpdateQuantity)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DeleteQuantity)))
                .addGap(81, 81, 81)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(getAllPartsQuantity2, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)
                        .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(85, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(QuantityCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(getAllPartsQuantity2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(getAllPartsQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(InsertQuantity)
                            .addComponent(UpdateQuantity)
                            .addComponent(DeleteQuantity)))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(417, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("M-Quantity", jPanel5);

        jLabel9.setText("Name");

        jLabel10.setText("Phone No");

        jLabel11.setText("Address");

        jLabel12.setText("Location");

        jLabel13.setText("Identity");

        jComboBox9.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Buyer", "Employee" }));

        InsertPeople.setText("Insert");
        InsertPeople.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsertPeopleActionPerformed(evt);
            }
        });

        UpdatePeople.setText("Update");
        UpdatePeople.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdatePeopleActionPerformed(evt);
            }
        });

        DeletePeople.setText("Delete");
        DeletePeople.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeletePeopleActionPerformed(evt);
            }
        });

        jComboBox10.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Buyer", "Employee" }));

        jTable6.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Phone No", "Address", "Location", ""
            }
        ));
        jTable6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable6MouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(jTable6);
        if (jTable6.getColumnModel().getColumnCount() > 0) {
            jTable6.getColumnModel().getColumn(4).setMinWidth(0);
            jTable6.getColumnModel().getColumn(4).setPreferredWidth(0);
            jTable6.getColumnModel().getColumn(4).setMaxWidth(0);
        }

        jButton6.setText("Search");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel15.setText("Select Image");
        jLabel15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel15MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                            .addComponent(jLabel10)
                            .addGap(18, 18, 18)
                            .addComponent(UserPhoneNo, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel6Layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel6Layout.createSequentialGroup()
                                    .addComponent(jLabel11)
                                    .addGap(18, 18, 18)
                                    .addComponent(UserAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel6Layout.createSequentialGroup()
                                    .addComponent(jLabel12)
                                    .addGap(18, 18, 18)
                                    .addComponent(UserLocation))
                                .addGroup(jPanel6Layout.createSequentialGroup()
                                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel9)
                                        .addComponent(jLabel13))
                                    .addGap(27, 27, 27)
                                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(UserName)
                                        .addComponent(jComboBox9, 0, 179, Short.MAX_VALUE)
                                        .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(InsertPeople)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(UpdatePeople)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DeletePeople)))
                .addGap(83, 83, 83)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jComboBox10, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 521, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(UserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(UserPhoneNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6))
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(UserAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(UserLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(jComboBox9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(InsertPeople)
                            .addComponent(UpdatePeople)
                            .addComponent(DeletePeople)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(139, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("m-People", jPanel6);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 860, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 676, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("", jPanel7);

        jButton5.setFont(new java.awt.Font("sansserif", 0, 48)); // NOI18N
        jButton5.setText("Manage Stock");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jTabbedPane1.addTab("Stock Detail", jButton5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 860, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:

        StockManagement manage = new StockManagement();
        manage.setVisible(true);
        manage.setLocationRelativeTo(null);
        this.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jLabel15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel15MouseClicked
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();

        fileChooser.setDialogTitle("Choose image");
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        int returnval=fileChooser.showOpenDialog(this);
        if(returnval==JFileChooser.APPROVE_OPTION)
        {
            file = fileChooser.getSelectedFile();

            try
            {   //display the image in jlabel
                BufferedImage bi =ImageIO.read(file);

                ImageIcon image = new ImageIcon(bi);
                Image img = image.getImage();
                Image resizeimage = img.getScaledInstance(jLabel15.getWidth(),jLabel15.getHeight(), Image.SCALE_SMOOTH);
                finalImage = new ImageIcon(resizeimage);

                jLabel15.setIcon(finalImage);
            }
            catch(IOException e)
            {

            }

        }
    }//GEN-LAST:event_jLabel15MouseClicked

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:

        String identity = jComboBox10.getSelectedIndex()==0 ? "Buyer" : "Employee";
        List<People> list =PeopleBL.GetAllByIdentified(identity);

        DefaultTableModel tablemodel = (DefaultTableModel) jTable6.getModel();

        tablemodel.setRowCount(0);
        Object[] row = new Object[5];

        for (int i = 0; i < list.size(); i++) {

            row[0] = list.get(i).getName();
            row[1] = list.get(i).getPhoneNo();
            row[2] = list.get(i).getAddress();
            row[3] = list.get(i).getLocation();
            row[4] = list.get(i).getID();
            tablemodel.addRow(row);

        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jTable6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable6MouseClicked
        // TODO add your handling code here:
        UpdateId = 0;
        PrimaryKey = 0;

        int rowId = jTable6.getSelectedRow();
        TableModel model = jTable6.getModel();

        int val = (int)model.getValueAt(rowId, 4);

        people = PeopleBL.GetSingle(val);

        ImageIcon image = new ImageIcon(new ImageIcon(people.getImage()).getImage().getScaledInstance(200, 200, Image.SCALE_SMOOTH));
        jLabel15.setText("");
        jLabel15.setIcon(image);

        UserName.setText(model.getValueAt(rowId, 0).toString());
        UserPhoneNo.setText(model.getValueAt(rowId, 1).toString());
        UserAddress.setText(model.getValueAt(rowId, 2).toString());
        UserLocation.setText(model.getValueAt(rowId, 3).toString());

        UpdateId = (int)model.getValueAt(rowId, 4);
    }//GEN-LAST:event_jTable6MouseClicked

    private void DeletePeopleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeletePeopleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DeletePeopleActionPerformed

    private void UpdatePeopleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdatePeopleActionPerformed
        // TODO add your handling code here:

        people.setName(UserName.getText());
        people.setAddress(UserAddress.getText());
        people.setLocation(UserLocation.getText());
        people.setPhoneNo(UserPhoneNo.getText());

        base.setIsDeleted("no");
        base.setIsApproved("yes");
        base.setCreatedOn(date.toString());

        people.setBase(base);
        if(file!=null){
            try {
                FileInputStream fs = new FileInputStream(file);
                ByteArrayOutputStream bos = new ByteArrayOutputStream();
                byte[] buf = new byte[1024];

                for (int i = 0; (i =fs.read(buf))!=-1;) {
                    bos.write(buf,0,i);

                }
                people.setImage(bos.toByteArray());
            } catch (FileNotFoundException ex) {
                Logger.getLogger(ManageStock.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(ManageStock.class.getName()).log(Level.SEVERE, null, ex);
            }catch(Exception e){
                System.err.println(e.getMessage());
            }

        }else{

            People peopleSingle = PeopleBL.GetSingle(UpdateId);

            people.setImage(peopleSingle.getImage());

        }

        people.setID(UpdateId);

        PeopleBL.Update(people);
    }//GEN-LAST:event_UpdatePeopleActionPerformed

    private void InsertPeopleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InsertPeopleActionPerformed
        // TODO add your handling code here:

        people.setName(UserName.getText());
        people.setPhoneNo(UserPhoneNo.getText());
        people.setAddress(UserAddress.getText());
        people.setLocation(UserLocation.getText());

        String identity = jComboBox9.getSelectedIndex()==0 ? "Buyer" : "Employee";

        people.setIdentified(identity);
        base.setIsApproved("yes");
        base.setIsDeleted("no");
        base.setCreatedOn(date.toString());
        people.setBase(base);

        try {
            FileInputStream fs = new FileInputStream(file);
            ByteArrayOutputStream bos = new ByteArrayOutputStream();
            byte[] buf = new byte[1024];

            for (int i = 0; (i =fs.read(buf))!=-1;) {
                bos.write(buf,0,i);

            }

            people.setImage(bos.toByteArray());
        } catch (FileNotFoundException ex) {
            Logger.getLogger(ManageStock.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(ManageStock.class.getName()).log(Level.SEVERE, null, ex);
        }

        PeopleBL.Add(people);
    }//GEN-LAST:event_InsertPeopleActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        int value = mapGetallParts.get(getAllPartsQuantity2.getSelectedIndex());
        List<Quantity> list = QuantityBL.GetAllByPartsId(value);
        DefaultTableModel tablemodel = (DefaultTableModel) jTable5.getModel();
        tablemodel.setRowCount(0);
        Object[] row = new Object[4];

        for (int i = 0; i < list.size(); i++) {

            parts = PartsBL.GetSingle(list.get(i).getPartsId());

            row[0] = parts.getName();
            row[1] = list.get(i).getCount();
            row[2] = list.get(i).getId();
            row[3] = list.get(i).getPartsId();
            tablemodel.addRow(row);

        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTable5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable5MouseClicked
        // TODO add your handling code here:
        UpdateId = 0;
        PrimaryKey = 0;

        int rowId = jTable5.getSelectedRow();
        TableModel model = jTable5.getModel();

        QuantityCount.setText(model.getValueAt(rowId, 1).toString());

        UpdateId = (int)model.getValueAt(rowId, 2);
        PrimaryKey = (int)model.getValueAt(rowId, 3);
    }//GEN-LAST:event_jTable5MouseClicked

    private void UpdateQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateQuantityActionPerformed
        // TODO add your handling code here:

        quantity.setCount(QuantityCount.getText());

        base.setIsApproved("yes");
        base.setIsDeleted("no");
        base.setCreatedOn(date.toString());
        quantity.setBase(base);
        quantity.setPartsId(PrimaryKey);

        quantity.setId(UpdateId);

        QuantityBL.Update(quantity);

        QuantityCount.setText("");
    }//GEN-LAST:event_UpdateQuantityActionPerformed

    private void InsertQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InsertQuantityActionPerformed
        // TODO add your handling code here:
        quantity.setCount(QuantityCount.getText());

        base.setIsApproved("yes");
        base.setIsDeleted("no");
        base.setCreatedOn(date.toString());
        quantity.setBase(base);
        int value = mapGetallParts.get(getAllPartsQuantity.getSelectedIndex());
        quantity.setPartsId(value);
        QuantityBL.Add(quantity);

        QuantityCount.setText("");
    }//GEN-LAST:event_InsertQuantityActionPerformed

    private void SelectImageLableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SelectImageLableMouseClicked
        // TODO add your handling code here:

        JFileChooser fileChooser = new JFileChooser();

        fileChooser.setDialogTitle("Choose image");
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        int returnval=fileChooser.showOpenDialog(this);
        if(returnval==JFileChooser.APPROVE_OPTION)
        {
            file = fileChooser.getSelectedFile();

            try
            {   //display the image in jlabel
                BufferedImage bi =ImageIO.read(file);

                ImageIcon image = new ImageIcon(bi);
                Image img = image.getImage();
                Image resizeimage = img.getScaledInstance(SelectImageLable.getWidth(),SelectImageLable.getHeight(), Image.SCALE_SMOOTH);
                finalImage = new ImageIcon(resizeimage);

                SelectImageLable.setIcon(finalImage);
            }
            catch(IOException e)
            {

            }

        }
    }//GEN-LAST:event_SelectImageLableMouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:

        int value = mapGetallRacks.get(getAllRacksPart2.getSelectedIndex());
        List<Parts> list = PartsBL.GetAllByRackId(value);
        DefaultTableModel tablemodel = (DefaultTableModel) jTable4.getModel();
        tablemodel.setRowCount(0);

        Object[] row = new Object[6];

        for (int i = 0; i < list.size(); i++) {

            rack = RackBL.GetSingle(list.get(i).getRackId());

            row[0] = rack.getName();
            row[1] = list.get(i).getName();
            row[2] = list.get(i).getSerialNo();

            ImageIcon image = new ImageIcon(new ImageIcon(list.get(i).getImage()).getImage());

            row[3] = image;
            row[4] = list.get(i).getId();
            row[5] = list.get(i).getRackId();
            tablemodel.addRow(row);

        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void DeletePartsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeletePartsActionPerformed
        // TODO add your handling code here:

        parts.setId(UpdateId);
        PartsBL.Delete(parts);
    }//GEN-LAST:event_DeletePartsActionPerformed

    private void UpdatePartsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdatePartsActionPerformed
        // TODO add your handling code here:

        parts.setName(PartName.getText());
        parts.setSerialNo(PartSerialNo.getText());
        int value = mapGetallRacks.get(getAllRacksPart.getSelectedIndex());
        parts.setRackId(value);
        base.setIsDeleted("no");
        base.setIsApproved("yes");
        base.setCreatedOn(date.toString());

        parts.setBase(base);

        if(file!=null){
            try {
                FileInputStream fs = new FileInputStream(file);
                ByteArrayOutputStream bos = new ByteArrayOutputStream();
                byte[] buf = new byte[1024];

                for (int i = 0; (i =fs.read(buf))!=-1;) {
                    bos.write(buf,0,i);

                }
                parts.setImage(bos.toByteArray());
            } catch (FileNotFoundException ex) {
                Logger.getLogger(ManageStock.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(ManageStock.class.getName()).log(Level.SEVERE, null, ex);
            }catch(Exception e){
                System.err.println(e.getMessage());
            }

        }else{

            Parts partsSingle = PartsBL.GetSingle(UpdateId);
            people.setImage(partsSingle.getImage());

        }

        parts.setId(UpdateId);

        PartsBL.Update(parts);
    }//GEN-LAST:event_UpdatePartsActionPerformed

    private void InsertPartsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InsertPartsActionPerformed
        // TODO add your handling code here:
        getAllPartsQuantity.removeAllItems();
        getAllPartsQuantity2.removeAllItems();
        parts.setName(PartName.getText());
        int value = mapGetallRacks.get(getAllRacksPart.getSelectedIndex());
        parts.setRackId(value);
        parts.setSerialNo(PartSerialNo.getText());

        try {
            FileInputStream fs = new FileInputStream(file);
            ByteArrayOutputStream bos = new ByteArrayOutputStream();
            byte[] buf = new byte[1024];

            for (int i = 0; (i =fs.read(buf))!=-1;) {
                bos.write(buf,0,i);

            }
            parts.setImage(bos.toByteArray());
        } catch (FileNotFoundException ex) {
            Logger.getLogger(ManageStock.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(ManageStock.class.getName()).log(Level.SEVERE, null, ex);
        }

        base.setIsApproved("yes");
        base.setIsDeleted("no");
        base.setCreatedOn(date.toString());

        parts.setBase(base);
        PartsBL.Add(parts);
        PartName.setText("");
        GetallParts();
    }//GEN-LAST:event_InsertPartsActionPerformed

    private void jTable4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable4MouseClicked
        // TODO add your handling code here:

        UpdateId = 0;
        PrimaryKey = 0;

        int rowId = jTable4.getSelectedRow();
        TableModel model = jTable4.getModel();

        int val = (int)model.getValueAt(rowId, 4);

        parts = PartsBL.GetSingle(val);
        ImageIcon image = new ImageIcon(new ImageIcon(parts.getImage()).getImage().getScaledInstance(200, 200, Image.SCALE_SMOOTH));
        SelectImageLable.setText("");
        SelectImageLable.setIcon(image);

        PartName.setText(model.getValueAt(rowId, 1).toString());
        PartSerialNo.setText(model.getValueAt(rowId, 2).toString());
        UpdateId = (int)model.getValueAt(rowId, 4);
        //   PrimaryKey = (int)model.getValueAt(rowId, 5);
    }//GEN-LAST:event_jTable4MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:

        int value = mapGetallBLock.get(RackInsertAllBlock2.getSelectedIndex());
        List<Rack> list = RackBL.GetAllByBlockId(value);
        DefaultTableModel tablemodel = (DefaultTableModel) jTable3.getModel();
        tablemodel.setRowCount(0);
        Object[] row = new Object[4];

        for (int i = 0; i < list.size(); i++) {

            block = BlockBL.GetSingle(list.get(i).getBlockID());

            row[0] = block.getName();
            row[1] = list.get(i).getName();
            row[2] = list.get(i).getID();
            row[3] = list.get(i).getBlockID();
            tablemodel.addRow(row);

        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void DeleteRackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteRackActionPerformed
        // TODO add your handling code here:

        rack.setID(UpdateId);

        RackBL.Delete(rack);
        RackName.setText("");
    }//GEN-LAST:event_DeleteRackActionPerformed

    private void UpdateRackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateRackActionPerformed
        // TODO add your handling code here:
        rack.setName(RackName.getText());
        rack.setBlockID(PrimaryKey);

        base.setIsApproved("yes");
        base.setIsDeleted("no");
        base.setCreatedOn(date.toString());
        rack.setBase(base);
        rack.setID(UpdateId);
        RackBL.Update(rack);

        RackName.setText("");
    }//GEN-LAST:event_UpdateRackActionPerformed

    private void InsertRackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InsertRackActionPerformed
        // TODO add your handling code here:
        getAllRacksPart.removeAllItems();
        getAllRacksPart2.removeAllItems();
        rack.setName(RackName.getText());
        int value = mapGetallBLock.get(RackInsertAllBlock.getSelectedIndex());

        rack.setBlockID(value);
        rack.getName();
        base.setIsApproved("yes");
        base.setIsDeleted("no");
        base.setCreatedOn(date.toString());

        rack.setBase(base);

        RackBL.Add(rack);

        RackName.setName("");

        GetallRacks();
    }//GEN-LAST:event_InsertRackActionPerformed

    private void jTable3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable3MouseClicked
        // TODO add your handling code here:
        UpdateId = 0;
        PrimaryKey = 0;

        int rowId = jTable3.getSelectedRow();
        TableModel model = jTable3.getModel();

        RackName.setText(model.getValueAt(rowId, 1).toString());
        UpdateId = (int)model.getValueAt(rowId, 2);
        PrimaryKey = (int)model.getValueAt(rowId, 3);
    }//GEN-LAST:event_jTable3MouseClicked

    private void SearchBlockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBlockActionPerformed
        // TODO add your handling code here:
        int value = mapGetallBuilding.get(jComboBox1.getSelectedIndex());
        List<Block> list = BlockBL.GetAllByBuildingId(value);
        DefaultTableModel tablemodel = (DefaultTableModel) jTable2.getModel();
        tablemodel.setRowCount(0);
        Object[] row = new Object[4];

        for (int i = 0; i < list.size(); i++) {

            building = BuildingBL.GetSingle(list.get(i).getBuildingId());

            row[0] = building.getName();
            row[1] = list.get(i).getName();
            row[2] = list.get(i).getId();
            row[3] = list.get(i).getBuildingId();
            tablemodel.addRow(row);

        }
    }//GEN-LAST:event_SearchBlockActionPerformed

    private void DeleteBlockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteBlockActionPerformed
        // TODO add your handling code here:
        getAllRacksPart.removeAllItems();
        getAllRacksPart2.removeAllItems();

        block.setId(UpdateId);

        BlockBL.Delete(block);
        BlockName.setText("");
        GetallBLock();
    }//GEN-LAST:event_DeleteBlockActionPerformed

    private void UpdateBlockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateBlockActionPerformed
        // TODO add your handling code here:
        getAllRacksPart.removeAllItems();
        getAllRacksPart2.removeAllItems();

        block.setName(BlockName.getText());
        block.setBuildingId(PrimaryKey);
        block.setId(UpdateId);
        base.setIsApproved("yes");
        base.setIsDeleted("no");
        base.setCreatedOn(date.toString());
        block.setBase(base);

        BlockBL.Update(block);
        BlockName.setText("");

        GetallBLock();
    }//GEN-LAST:event_UpdateBlockActionPerformed

    private void InsertBlockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InsertBlockActionPerformed
        // TODO add your handling code here:
        RackInsertAllBlock.removeAllItems();
        RackInsertAllBlock2.removeAllItems();
        block.setName(BlockName.getText());
        base.setIsApproved("yes");
        base.setIsDeleted("no");
        base.setCreatedOn(date.toString());

        int value = mapGetallBuilding.get(getallbuilding.getSelectedIndex());

        block.setBuildingId(value);

        block.setBase(base);

        BlockBL.Add(block);
        BlockName.setText("");
        GetallBLock();
    }//GEN-LAST:event_InsertBlockActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        // TODO add your handling code here:
        UpdateId = 0;
        PrimaryKey = 0;

        int rowId = jTable2.getSelectedRow();
        TableModel model = jTable2.getModel();

        BlockName.setText(model.getValueAt(rowId, 1).toString());
        UpdateId = (int)model.getValueAt(rowId, 2);
        PrimaryKey = (int)model.getValueAt(rowId, 3);
    }//GEN-LAST:event_jTable2MouseClicked

    private void BuildingUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuildingUpdateActionPerformed
        // TODO add your handling code here:
        getallbuilding.removeAllItems();
        jComboBox1.removeAllItems();
        building.setName(BuildingName.getText());
        base.setIsApproved("yes");
        base.setIsDeleted("no");
        base.setCreatedOn(date.toString());
        building.setBase(base);
        building.setId(UpdateId);

        BuildingBL.Update(building);
        GetData();
        BuildingName.setText("");
        GetallBuilding();
    }//GEN-LAST:event_BuildingUpdateActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        getallbuilding.removeAllItems();
        jComboBox1.removeAllItems();
        building.setName(BuildingName.getText());
        base.setIsApproved("yes");
        base.setIsDeleted("no");
        base.setCreatedOn(date.toString());
        building.setBase(base);
        BuildingBL.Add(building);

        GetData();
        BuildingName.setText("");
        GetallBuilding();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void BuildingNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuildingNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BuildingNameActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        UpdateId =0;
        int rowId = jTable1.getSelectedRow();
        TableModel model = jTable1.getModel();

        BuildingName.setText(model.getValueAt(rowId, 1).toString());
        UpdateId = (int) model.getValueAt(rowId, 0);
    }//GEN-LAST:event_jTable1MouseClicked

    private void DeleteNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteNameActionPerformed
        // TODO add your handling code here:
        getallbuilding.removeAllItems();
        jComboBox1.removeAllItems();
        building.setId(UpdateId);

        BuildingBL.Delete(building);
        GetData();
        BuildingName.setText("");
        GetallBuilding();
    }//GEN-LAST:event_DeleteNameActionPerformed

    private void GetallBuilding() {
         
       int a= 0;
       mapGetallBuilding = new HashMap<Integer, Integer>();
           AllBuilding = BuildingBL.GetAll();
            
           for (int i = 0; i < AllBuilding.size(); i++) {
        
             getallbuilding.addItem(AllBuilding.get(i).getName());
             jComboBox1.addItem(AllBuilding.get(i).getName());
             mapGetallBuilding.put(a, AllBuilding.get(i).getId());
             a++;
           
        }
      
        
              
    }
   
    private void GetallBLock() {
        
        mapGetallBLock = new HashMap<Integer, Integer>();
           AllBlock = BlockBL.GetAll();
            int a= 0;
           for (int i = 0; i < AllBlock.size(); i++) {
        
             RackInsertAllBlock.addItem(AllBlock.get(i).getName());
             RackInsertAllBlock2.addItem(AllBlock.get(i).getName());
             mapGetallBLock.put(a, AllBlock.get(i).getId());
             a++;
           
        }
      
        
              
    }
    
     private void GetallRacks() {
        int a= 0;
         mapGetallRacks = new HashMap<Integer, Integer>();
           AllRack = RackBL.GetAll();
        for (int i = 0; i < AllRack.size(); i++) {
        
             getAllRacksPart.addItem(AllRack.get(i).getName());
             getAllRacksPart2.addItem(AllRack.get(i).getName());
             mapGetallRacks.put(a, AllRack.get(i).getID());
             a++;
           
        }
      
        
              
    }
     
      private void GetallParts() {
        int a= 0;
        mapGetallParts = new HashMap<Integer, Integer>();
           AllParts = PartsBL.GetAll();
        for (int i = 0; i < AllParts.size(); i++) {
        
             getAllPartsQuantity.addItem(AllParts.get(i).getName());
             getAllPartsQuantity2.addItem(AllParts.get(i).getName());
             mapGetallParts.put(a, AllParts.get(i).getId());
             a++;
           
        }
      
        
              
    }


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageStock().setVisible(true);
            }
        });
           
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField BlockName;
    private javax.swing.JTextField BuildingName;
    private javax.swing.JButton BuildingUpdate;
    private javax.swing.JButton DeleteBlock;
    private javax.swing.JButton DeleteName;
    private javax.swing.JButton DeleteParts;
    private javax.swing.JButton DeletePeople;
    private javax.swing.JButton DeleteQuantity;
    private javax.swing.JButton DeleteRack;
    private javax.swing.JButton InsertBlock;
    private javax.swing.JButton InsertParts;
    private javax.swing.JButton InsertPeople;
    private javax.swing.JButton InsertQuantity;
    private javax.swing.JButton InsertRack;
    private javax.swing.JLabel LableName;
    private javax.swing.JTextField PartName;
    private javax.swing.JLabel PartName1;
    private javax.swing.JTextField PartSerialNo;
    private javax.swing.JTextField QuantityCount;
    private javax.swing.JComboBox<String> RackInsertAllBlock;
    private javax.swing.JComboBox<String> RackInsertAllBlock2;
    private javax.swing.JTextField RackName;
    private javax.swing.JButton SearchBlock;
    private javax.swing.JLabel SelectImageLable;
    private javax.swing.JButton UpdateBlock;
    private javax.swing.JButton UpdateParts;
    private javax.swing.JButton UpdatePeople;
    private javax.swing.JButton UpdateQuantity;
    private javax.swing.JButton UpdateRack;
    private javax.swing.JTextField UserAddress;
    private javax.swing.JTextField UserLocation;
    private javax.swing.JTextField UserName;
    private javax.swing.JTextField UserPhoneNo;
    private javax.swing.JComboBox<String> getAllPartsQuantity;
    private javax.swing.JComboBox<String> getAllPartsQuantity2;
    private javax.swing.JComboBox<String> getAllRacksPart;
    private javax.swing.JComboBox<String> getAllRacksPart2;
    private javax.swing.JComboBox<String> getallbuilding;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox10;
    private javax.swing.JComboBox<String> jComboBox9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTable jTable5;
    private javax.swing.JTable jTable6;
    // End of variables declaration//GEN-END:variables
}
